package formularios;

import clases.Vaca;
import java.time.LocalDate;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

public class FrmDialogTablaVacas extends javax.swing.JDialog {

    int opcion = 0;
    DefaultTableModel tableModel;

    public FrmDialogTablaVacas(java.awt.Frame parent, boolean modal, int opcion) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        this.opcion = opcion;

        configuracionTabla();
        llenarTabla(opcion);
        System.out.println(opcion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblIconTabla = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 51, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText("Tabla");

        lblIconTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tablaazul.png"))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(59, 16, 36));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblIconTabla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblIconTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(59, 16, 36));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDatos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 103, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMouseClicked
        int col = this.tblDatos.getSelectedColumn();
        if (col == 6) {
            int fila = this.tblDatos.getSelectedRow();

//            int numeroVaca = Integer.parseInt(this.tblDatos.getValueAt(fila, 0).toString());
//            LocalDate fechaNacVca = LocalDate.parse(this.tblDatos.getValueAt(fila, 1).toString());

//            System.out.println("Has seleccionado ver en la fila: " + fila);

            /*
                Como en la tabla no se muestra el idVaca para saber que vaca exactamente fue la que se selecciono
                lo que hacemos es tomar la fila y dependiendo de que tipo de vacas este viendo(todas, sana, enfermas)
                se buscara en el ArrayList por medio de la fila y la opcion que eligio del tipo de vaca
            
                osea lo que hace es por ejemplo seleccionamos la fila 0, si la opcion es 1 pues tomamos el dato en la pos
                0 del ArrayList, dependiendo de la opción se buscara se una manera diferente en la siguiente función
             */
//            System.out.println("El número de la vaca en la tabla es " + numeroVaca
//                    + " \nla fecha de nacimiento es " + fechaNacVca);
            Vaca objVaca = buscarVacaTabla(fila);

//            System.out.println("El número de la vaca traida por el metodo es:" + objVaca.getNumero()
//                    + " \nla fecha de nacimiento es " + objVaca.getFechaNacimiento());
            FrmDiagInformacionVaca frmDiagInformacionVaca = new FrmDiagInformacionVaca(null, true, objVaca, 0);
            frmDiagInformacionVaca.setVisible(true);
            llenarTabla(this.opcion); // Se vuelve a cargar el panel por si se ha actualizado algo

        }
    }//GEN-LAST:event_tblDatosMouseClicked

    private Vaca buscarVacaTabla(int fila) {

//        System.out.println("la opcion al entrar al metodo es " + this.opcion + " y la fila es " + fila);
        Vaca objVaca = null;
        boolean encontrada = false;
        int iterador = 0;
        switch (this.opcion) {

            case 1:

                //Al ser todos devuelve el dato en la pos fila ya que se agregaron en la tabla en el orden del ArrayList
                objVaca = FrmPrincipal.listadoDeVacas.get(fila);
                break;
            case 2:

                //se hace un conteo ya que estos fueron ingresados dependiendo una condicion
                //por ejemplo la fila 3 seria el 3 dato que cumplia la condicion de sana
                int cont = 0;
                while (encontrada != true) {

                    if (FrmPrincipal.listadoDeVacas.get(iterador).getEstado().equals("Sana")) {
                        if (cont == fila) {
                            encontrada = true;
                            objVaca = FrmPrincipal.listadoDeVacas.get(iterador);
                        } else {
                            cont++;
                        }
                    }
                    iterador++;

                }
                break;
            case 3:

                //lo mismo que la opcion 2
                int cont3 = 0;
                while (encontrada != true) {

                    if (FrmPrincipal.listadoDeVacas.get(iterador).getEstado().equals("Enferma")) {
                        if (cont3 == fila) {
                            encontrada = true;
                            objVaca = FrmPrincipal.listadoDeVacas.get(iterador);
                        } else {
                            cont3++;
                        }
                    }
                    iterador++;

                }

                break;
            default:
                System.out.println("Entro al default");
                throw new AssertionError();
        }

        return objVaca;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDialogTablaVacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDialogTablaVacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDialogTablaVacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDialogTablaVacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmDialogTablaVacas dialog = new FrmDialogTablaVacas(new javax.swing.JFrame(), true, 1);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIconTabla;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables

    private void configuracionTabla() {
        String encabezado[] = {"Número", "Fecha nacimiento", "Genero", "Kilos", "Tipo de vaca", "Potrero", "Opción"};
        String datos[][] = {};

        this.tableModel = new DefaultTableModel(datos, encabezado);
        this.tblDatos.setModel(tableModel);

    }

    private void llenarTabla(int opcion) {
        this.tableModel.setNumRows(0); //Para que se reinicie la tabla

        String fila[] = new String[7];

        switch (opcion) {
            case 1:

                for (Vaca objVaca : FrmPrincipal.listadoDeVacas) {
                    fila[0] = Integer.toString(objVaca.getNumero());
                    //modificación
                    if (objVaca.getFechaNacimiento() == null) {
                        fila[1] = "";
                    } else {
                        fila[1] = objVaca.getFechaNacimiento().toString();
                    }

                    fila[2] = objVaca.getGenero();
                    fila[3] = Float.toString(objVaca.getKilos());
                    fila[4] = objVaca.getTipoVaca();
                    fila[5] = objVaca.getPotrero();
                    fila[6] = "Ver";
                    this.tableModel.addRow(fila);

                }
                break;
            case 2:
                for (Vaca objVaca : FrmPrincipal.listadoDeVacas) {
                    if (objVaca.getEstado().equals("Sana")) {
                        fila[0] = Integer.toString(objVaca.getNumero());
                        //modificación
                        if (objVaca.getFechaNacimiento() == null) {
                            fila[1] = "";
                        } else {
                            fila[1] = objVaca.getFechaNacimiento().toString();
                        }

                        fila[2] = objVaca.getGenero();
                        fila[3] = Float.toString(objVaca.getKilos());
                        fila[4] = objVaca.getTipoVaca();
                        fila[5] = objVaca.getPotrero();
                        fila[6] = "Ver";
                        this.tableModel.addRow(fila);
                    }
                }
                break;
            case 3:
                for (Vaca objVaca : FrmPrincipal.listadoDeVacas) {
                    if (objVaca.getEstado().equals("Enferma")) {
                        fila[0] = Integer.toString(objVaca.getNumero());
                        //modificación
                        if (objVaca.getFechaNacimiento() == null) {
                            fila[1] = "";
                        } else {
                            fila[1] = objVaca.getFechaNacimiento().toString();
                        }

                        fila[2] = objVaca.getGenero();
                        fila[3] = Float.toString(objVaca.getKilos());
                        fila[4] = objVaca.getTipoVaca();
                        fila[5] = objVaca.getPotrero();
                        fila[6] = "Ver";
                        this.tableModel.addRow(fila);
                    }
                }
                break;
            default:
                throw new AssertionError();
        }

    }
}
